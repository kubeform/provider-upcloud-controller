/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Rules struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RulesSpec   `json:"spec,omitempty"`
	Status            RulesStatus `json:"status,omitempty"`
}

type RulesSpecFirewallRule struct {
	// Action to take if the rule conditions are met
	Action *string `json:"action" tf:"action"`
	// Freeform comment string for the rule
	// +optional
	Comment *string `json:"comment,omitempty" tf:"comment"`
	// The destination address range ends from this address
	// +optional
	DestinationAddressEnd *string `json:"destinationAddressEnd,omitempty" tf:"destination_address_end"`
	// The destination address range starts from this address
	// +optional
	DestinationAddressStart *string `json:"destinationAddressStart,omitempty" tf:"destination_address_start"`
	// The destination port range ends from this port number
	// +optional
	DestinationPortEnd *string `json:"destinationPortEnd,omitempty" tf:"destination_port_end"`
	// The destination port range starts from this port number
	// +optional
	DestinationPortStart *string `json:"destinationPortStart,omitempty" tf:"destination_port_start"`
	// The direction of network traffic this rule will be applied to
	Direction *string `json:"direction" tf:"direction"`
	// The address family of new firewall rule
	Family *string `json:"family" tf:"family"`
	// The ICMP type
	// +optional
	IcmpType *string `json:"icmpType,omitempty" tf:"icmp_type"`
	// The protocol this rule will be applied to
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// The source address range ends from this address
	// +optional
	SourceAddressEnd *string `json:"sourceAddressEnd,omitempty" tf:"source_address_end"`
	// The source address range starts from this address
	// +optional
	SourceAddressStart *string `json:"sourceAddressStart,omitempty" tf:"source_address_start"`
	// The source port range ends from this port number
	// +optional
	SourcePortEnd *string `json:"sourcePortEnd,omitempty" tf:"source_port_end"`
	// The source port range starts from this port number
	// +optional
	SourcePortStart *string `json:"sourcePortStart,omitempty" tf:"source_port_start"`
}

type RulesSpec struct {
	State *RulesSpecResource `json:"state,omitempty" tf:"-"`

	Resource RulesSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type RulesSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:MaxItems=1000
	FirewallRule []RulesSpecFirewallRule `json:"firewallRule" tf:"firewall_rule"`
	// The unique id of the server to be protected the firewall rules
	ServerID *string `json:"serverID" tf:"server_id"`
}

type RulesStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RulesList is a list of Ruless
type RulesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Rules CRD objects
	Items []Rules `json:"items,omitempty"`
}
