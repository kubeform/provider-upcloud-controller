/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type IpAddress struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IpAddressSpec   `json:"spec,omitempty"`
	Status            IpAddressStatus `json:"status,omitempty"`
}

type IpAddressSpec struct {
	State *IpAddressSpecResource `json:"state,omitempty" tf:"-"`

	Resource IpAddressSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type IpAddressSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Is address for utility or public network
	// +optional
	Access *string `json:"access,omitempty" tf:"access"`
	// The address family of new IP address
	// +optional
	Family *string `json:"family,omitempty" tf:"family"`
	// An UpCloud assigned IP Address
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// MAC address of server interface to assign address to
	// +optional
	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address"`
	// Zone of address, required when assigning a detached floating IP address
	// +optional
	Zone *string `json:"zone,omitempty" tf:"zone"`
}

type IpAddressStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IpAddressList is a list of IpAddresss
type IpAddressList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of IpAddress CRD objects
	Items []IpAddress `json:"items,omitempty"`
}
